exec xrdb ~/.Xresources
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec xdg-terminal

# kill focused window
bindsym $mod+q exec ~/.config/i3/i3-kill
bindsym $mod+Shift+q --release exec xkill
bindsym $mod+Ctrl+q --release exec killall xkill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id "rofi -show drun -font \\"DejaVu 9\\" -run-shell-command '{terminal} -e \\" {cmd}; read -n 1 -s\\"'"
bindsym $mod+Shift+d exec dmenu_run
bindsym $mod+Ctrl+Shift+d exec xdg-terminal $(dmenu_path | dmenu)
bindsym $mod+d exec rofi -show combi
bindsym $mod+Ctrl+d exec xfce4-appfinder
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+Ctrl+h move workspace to output left
bindsym $mod+Ctrl+j move workspace to output down
bindsym $mod+Ctrl+k move workspace to output up
bindsym $mod+Ctrl+l move workspace to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Ctrl+Left  move workspace to output left
bindsym $mod+Ctrl+Down  move workspace to output down
bindsym $mod+Ctrl+Up    move workspace to output up
bindsym $mod+Ctrl+Right move workspace to output right
#
# split in horizontal and vertical orientation
bindsym $mod+g split h
bindsym $mod+v split v
bindsym $mod+t split v; layout tabbed

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent
bindsym $mod+Shift+a focus child

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# move and switch to workspace
bindsym $mod+Ctrl+1 move container to workspace  1; workspace  1
bindsym $mod+Ctrl+2 move container to workspace  2; workspace  2
bindsym $mod+Ctrl+3 move container to workspace  3; workspace  3
bindsym $mod+Ctrl+4 move container to workspace  4; workspace  4
bindsym $mod+Ctrl+5 move container to workspace  5; workspace  5
bindsym $mod+Ctrl+6 move container to workspace  6; workspace  6
bindsym $mod+Ctrl+7 move container to workspace  7; workspace  7
bindsym $mod+Ctrl+8 move container to workspace  8; workspace  8
bindsym $mod+Ctrl+9 move container to workspace  9; workspace  9
bindsym $mod+Ctrl+0 move container to workspace 10; workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r exec "cat ~/.config/i3/config.* > ~/.config/i3/config "; restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+s exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to shutdown i3?' -b 'Yes, exit i3' 'shutdown 0'"
bindsym $mod+Ctrl+r exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to reboot i3?' -b 'Yes, exit i3' 'reboot'"
bindsym $mod+Ctrl+s exec systemctl suspend


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
	set $bigResize 12
        bindsym h resize shrink width  $bigResize px or $bigResize ppt
        bindsym j resize grow   height $bigResize px or $bigResize ppt
        bindsym k resize shrink height $bigResize px or $bigResize ppt
        bindsym l resize grow   width  $bigResize px or $bigResize ppt
        # same bindings, but for the arrow keys
        bindsym Left  resize shrink width  $bigResize px or $bigResize ppt
        bindsym Down  resize grow   height $bigResize px or $bigResize ppt
        bindsym Up    resize shrink height $bigResize px or $bigResize ppt
        bindsym Right resize grow   width  $bigResize px or $bigResize ppt

	# With shift is small shifts
	set $smallResize 2
        bindsym Shift+h resize shrink width  $smallResize px or $smallResize ppt
        bindsym Shift+j resize grow   height $smallResize px or $smallResize ppt
        bindsym Shift+k resize shrink height $smallResize px or $smallResize ppt
        bindsym Shift+l resize grow   width  $smallResize px or $smallResize ppt
        # same bindings, but for the arrow keys
        bindsym Shift+Left  resize shrink width  $smallResize px or $smallResize ppt
        bindsym Shift+Down  resize grow   height $smallResize px or $smallResize ppt
        bindsym Shift+Up    resize shrink height $smallResize px or $smallResize ppt
        bindsym Shift+Right resize grow   width  $smallResize px or $smallResize ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"

        # back  $mod+o normal: Enter or Escape
        bindsym $mod+Return mode "default"
        bindsym $mod+Escape mode "default"


}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command "~/.config/i3/status.out 2>~/.status.log"
}

exec --no-startup-id synclient HorizEdgeScroll=1 VertEdgeScroll=1 VertScrollDelta=-111

bindsym $mod+c exec chromium
bindsym $mod+ctrl+z exec zathura
bindsym $mod+Shift+comma workspace WUI;exec ~/dev/runWUI/run.sh
bindsym $mod+comma workspace WUI
bindsym $mod+Ctrl+comma move container to workspace  WUI; workspace  WUI
for_window [title="WebUpdatingIndicator compare"] floating enable 
bindsym $mod+Shift+m workspace MAIL; exec bash -c "start-mail"
bindsym $mod+m workspace MAIL
bindsym $mod+z workspace ZOOM
bindsym $mod+Ctrl+m move container to workspace  MAIL; workspace  MAIL
bindsym $mod+n exec nemo

exec --no-startup-id /usr/bin/gnome-keyring-deamon --start --components=secrets
exec numlockx on

floating_modifier $mod


bindsym $mod+Escape mode "LOCK MOD+ESC"
mode "LOCK MOD+ESC"
{
        bindsym $mod+Escape mode "default"
}
bindsym $mod+Shift+Escape mode "LOCK MOD+Shift+ESC"
mode "LOCK MOD+Shift+ESC"
{
        bindsym $mod+Shift+Escape mode "default"
}

bindsym $mod+x mode "System modifikator"
mode "System modifikator"
{
	bindsym w exec light - 0.9 ; exec lightGUI
	bindsym e exec light - 0.15; exec lightGUI
	bindsym r exec light + 0.15; exec lightGUI
	bindsym t exec light + 0.9 ; exec lightGUI
	bindsym q exec light H 0   ; exec lightGUI

	bindsym a exec "amixer sset Master -q 0%;   sleep 0.05; volumeGUI"
	bindsym s exec "amixer sset Master -q 10%-; sleep 0.05; volumeGUI"
	bindsym d exec "amixer sset Master -q 2%-;  sleep 0.05; volumeGUI"
	bindsym f exec "amixer sset Master -q 2%+;  sleep 0.05; volumeGUI"
	bindsym g exec "amixer sset Master -q 10%+; sleep 0.05; volumeGUI"

	bindsym Shift+a exec "echo 0 > .config/micloop/volume;pacmd set-sink-input-volume $(cat .config/micloop/id) $(cat .config/micloop/volume) ; notify-send loopmic $(cat .config/micloop/volume) -h string:x-canonical-private-synchronous:anything"
	bindsym Shift+s exec "echo $(( $(cat .config/micloop/volume)  - 20000 )) > .config/micloop/volume; notify-send loopmic \\" $(cat .config/micloop/volume) \\" -h string:x-canonical-private-synchronous:anything;pacmd set-sink-input-volume $(cat .config/micloop/id) $(cat .config/micloop/volume) "
	bindsym Shift+d exec "echo $(( $(cat .config/micloop/volume)  -  5000 )) > .config/micloop/volume; notify-send loopmic \\" $(cat .config/micloop/volume) \\" -h string:x-canonical-private-synchronous:anything;pacmd set-sink-input-volume $(cat .config/micloop/id) $(cat .config/micloop/volume) "
	bindsym Shift+f exec "echo $(( $(cat .config/micloop/volume)  +  5000 )) > .config/micloop/volume; notify-send loopmic \\" $(cat .config/micloop/volume) \\" -h string:x-canonical-private-synchronous:anything;pacmd set-sink-input-volume $(cat .config/micloop/id) $(cat .config/micloop/volume) "
	bindsym Shift+g exec "echo $(( $(cat .config/micloop/volume)  + 20000 )) > .config/micloop/volume; notify-send loopmic \\" $(cat .config/micloop/volume) \\" -h string:x-canonical-private-synchronous:anything;pacmd set-sink-input-volume $(cat .config/micloop/id) $(cat .config/micloop/volume) "
	bindsym Ctrl+a exec "pactl load-module module-loopback source=\\"alsa_input.pci-0000_00_1f.3.analog-stereo\\" latency_msec=1 | ~/.config/micloop/grepId > ~/.config/micloop/id "
	bindsym Ctrl+s exec "pactl unload-module module-loopback"
	bindsym Ctrl+d exec "echo $(( 1 - $(cat ~/.config/micloop/mute) )) > ~/.config/micloop/mute;pacmd set-sink-input-mute $(cat ~/.config/micloop/id) $(cat ~/.config/micloop/mute) ; notify-send 'loopmic mute' $(cat ~/.config/micloop/mute) -h string:x-canonical-private-synchronous:anything"

	bindsym comma exec  xrandr --auto 
	bindsym n exec xrand--auto; exec  xrandr --output HDMI-1 --off --output eDP-1 --pos 0x0
	bindsym m exec xrandr --auto; exec  xrandr --output HDMI-1 --pos 0x0 --output eDP-1 --pos 2560x500

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"


	bindsym $mod+w exec light - 0.9 ; exec lightGUI
	bindsym $mod+e exec light - 0.15; exec lightGUI
	bindsym $mod+r exec light + 0.15; exec lightGUI
	bindsym $mod+t exec light + 0.9 ; exec lightGUI
	bindsym $mod+q exec light H 0   ; exec lightGUI

	bindsym $mod+a exec "amixer sset Master -q 0%;   sleep 0.05; volumeGUI"
	bindsym $mod+s exec "amixer sset Master -q 10%-; sleep 0.05; volumeGUI"
	bindsym $mod+d exec "amixer sset Master -q 2%-;  sleep 0.05; volumeGUI"
	bindsym $mod+f exec "amixer sset Master -q 2%+;  sleep 0.05; volumeGUI"
	bindsym $mod+g exec "amixer sset Master -q 10%+; sleep 0.05; volumeGUI"

	bindsym $mod+comma exec  xrandr --auto 
	bindsym $mod+n exec xrand--auto; exec  xrandr --output HDMI-1 --off --output eDP-1 --pos 0x0
	bindsym $mod+m exec xrandr --auto; exec  xrandr --output HDMI-1 --pos 0x0 --output eDP-1 --pos 2560x500

        # back  $mod+o normal: Enter or Escape
        bindsym $mod+Return mode "default"
        bindsym $mod+Escape mode "default"

	bindsym b exec "setxkbmap us,cz -variant ,ucw -option grp:caps_switch"

	bindsym p exec cpuFGUI
	bindsym o exec "cpuF 5000; cpuFGUI 'SET TO 5000'"
	bindsym i exec "cpuF 1500; cpuFGUI 'SET TO 1500'"
	bindsym u exec "cpuF  800; cpuFGUI 'SET TO  800'"
	bindsym y exec "cpuF  400; cpuFGUI 'SET TO  400'"

	bindsym            l exec "diskSleepGUI sda 1"
	bindsym      Shift+l exec "diskSleepGUI sdb 1"
	bindsym Ctrl+      l exec "diskSleepGUI sdc 1"
	bindsym Ctrl+Shift+l exec "diskSleepGUI sdd 1"

	bindsym            k exec "diskSleepGUI sda 30"
	bindsym      Shift+k exec "diskSleepGUI sdb 30"
	bindsym Ctrl+      k exec "diskSleepGUI sdc 30"
	bindsym Ctrl+Shift+k exec "diskSleepGUI sdd 30"

	bindsym            j exec "diskSleepGUI sda 0"
	bindsym      Shift+j exec "diskSleepGUI sdb 0"
	bindsym Ctrl+      j exec "diskSleepGUI sdc 0"
	bindsym Ctrl+Shift+j exec "diskSleepGUI sdd 0"

	bindsym            semicolon exec "diskSleepGUI sda Y"
	bindsym      Shift+semicolon exec "diskSleepGUI sdb Y"
	bindsym Ctrl+      semicolon exec "diskSleepGUI sdc Y"
	bindsym Ctrl+Shift+semicolon exec "diskSleepGUI sdd Y"

	bindsym            backslash exec "diskSleepGUI sda off"
	bindsym      Shift+backslash exec "diskSleepGUI sdb off"
	bindsym Ctrl+      backslash exec "diskSleepGUI sdc off"
	bindsym Ctrl+Shift+backslash exec "diskSleepGUI sdd off"

	bindsym            apostrophe exec "diskSleepGUI sda umount"
	bindsym      Shift+apostrophe exec "diskSleepGUI sdb umount"
	bindsym Ctrl+      apostrophe exec "diskSleepGUI sdc umount"
	bindsym Ctrl+Shift+apostrophe exec "diskSleepGUI sdd umount"

	bindsym bracketright exec "notify-send \\"$(lsblk)\\""
	bindsym Shift+bracketright mode "default"; exec "gksudo -g gparted"
	bindsym Ctrl+bracketright mode "default"; exec "gksudo -g gnome-disks"

	bindcode      94 exec --no-startup-id "osdd-run & sleep 1;osdc --color=red RESTART"
	bindcode $mod+51 exec --no-startup-id "osdd-run & sleep 1;osdc --color=red RESTART"
}
 
bindcode 121 exec "echo $(( 1 - $(cat ~/.config/micloop/mute) )) > ~/.config/micloop/mute;pacmd set-sink-input-mute $(cat ~/.config/micloop/id) $(cat ~/.config/micloop/mute) ; notify-send 'loopmic mute' $(cat ~/.config/micloop/mute) -h string:x-canonical-private-synchronous:anything"
bindcode 122 exec "echo $(( $(cat .config/micloop/volume)  - 10000 )) > .config/micloop/volume; notify-send loopmic \\" $(cat .config/micloop/volume)\\" -h string:x-canonical-private-synchronous:anything;pacmd set-sink-input-volume $(cat .config/micloop/id) \\"$(cat .config/micloop/volume)\\" "
bindcode 123 exec "echo $(( $(cat .config/micloop/volume)  + 10000 )) > .config/micloop/volume; notify-send loopmic \\" $(cat .config/micloop/volume)\\" -h string:x-canonical-private-synchronous:anything;pacmd set-sink-input-volume $(cat .config/micloop/id) $(cat .config/micloop/volume) "

#bindsym Print exec gnome-screenshot -w
#bindsym Shift+Print exec gnome-screenshot
#bindsym Control+Print exec gnome-screenshot -i
#bindsym $mod+Print exec printscreengimp

bindsym Print exec "maim -suo | xclip -selection clipboard -t image/png"
bindsym Shift+Print exec "maim -suo > ~/screenshot.png ; convert ~/screenshot.png $(zenity --file-selection --save --file-filter='Picture | *.png *.jpg *.gif *.bmp' --confirm-overwrite)"
bindsym Ctrl+Shift+Print exec "maim -uo | convert png:- `zenity --file-selection --save --file-filter='Picture | *.png *.jpg *.gif *.bmp' --confirm-overwrite`"
bindsym Ctrl+Print exec " maim -uo | xclip -selection clipboard -t image/png"
bindsym $mod+Print exec "maim -uo > ~/screenshot.png ;gimp ~/screenshot.png"

exec --no-startup-id /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 &

for_window [class=".*"] border pixel 1
for_window [class="zoom"] move container to workspace ZOOM

for_window [title="Jitsi Meet"] floating enable 

#for_window [class=".*"] border pixel 1
bindsym $mod+p exec ~/.config/i3/i3-toggle-border



# class                 border  bground text    indicator child_border
client.focused          #FF0000 #285577 #FFFFFF #FF0000   #FF0000
client.focused_inactive #000000 #000000 #FFFFFF #000000   #000000
client.unfocused        #000000 #000000 #888888 #000000   #000000
client.urgent           #2F343A #900000 #FFFFFF #900000   #900000
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #000000

client.background       #FFFFFF


bindsym $mod+o exec --no-startup-id bash -i -c "mate-session"
bindsym $mod+Shift+o exec --no-startup-id killall -3 mate-session; exec --no-startup-id killall -3 mate-panel

exec "setxkbmap us,cz -variant ,ucw -option grp:caps_switch"

exec --no-startup-id "sleep 2; osdd-run & sleep 1;osdc --color=red START"

bindcode      94 exec "osdc --duration=1 --log=1 \\"\\""
bindcode $mod+51 exec "osdc --duration=1 --log=1 \\"\\""
bindcode Shift+     94 exec "osdc --skip=1 --log=0 --duration=1 \\"\\""
bindcode Shift+$mod+51 exec "osdc --skip=1 --log=0 --duration=1 \\"\\""
bindcode Ctrl+     94 exec "osd-clock"
bindcode Ctrl+$mod+51 exec "osd-clock"
bindcode Ctrl+Shift     +94 exec "terminal -e bash -i -c \\"cat ~/.osdd_log;read\\""
bindcode Ctrl+Shift+$mod+51 exec "terminal -e bash -i -c \\"cat ~/.osdd_log;read\\""

bindcode $mod+94 exec "terminal"
